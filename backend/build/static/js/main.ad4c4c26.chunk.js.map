{"version":3,"sources":["components/Blog.js","components/LoginForm.js","components/Notification.js","components/Togglable.js","components/CreateNewBlogForm.js","components/LoggedInUser.js","services/user.js","services/blogs.js","App.js","index.js"],"names":["Blog","blog","likeButtonHandler","removeButtonHandler","useState","view","setView","likeHandler","a","newBlog","user","id","likes","author","title","url","style","paddingTop","paddingBottom","paddingLeft","border","borderWidth","marginBottom","className","marginLeft","onClick","Fragment","LoginForm","username","password","onUsernameChange","onPasswordChange","loginFormSubmitHandler","onSubmit","name","value","onChange","type","Notification","positive","message","Togglable","React","forwardRef","props","ref","visible","setVisible","showWhenVisible","display","hideWhenVisible","toggleVisibility","resetFn","useImperativeHandle","showContentButtonLabel","children","hideContentButtonLabel","displayName","CreateNewBlogForm","setTitle","setAuthor","setUrl","createNewFormRef","useRef","resetCreateNewForm","inputChangeHandler","setFn","event","target","createNewBlogSubmitHandler","htmlFor","LoggedInUser","logoutButtonHandler","userServices","login","config","method","data","axios","res","baseUrl","blogServices","getAll","createNew","token","headers","updateABlogEntry","blogId","removeBlog","App","blogs","setBlogs","setUsername","setPassword","setUser","notification","setNotification","appRef","preventDefault","addNewBlog","current","newAddedBlog","newBlogs","setNewNotification","newNotification","setTimeout","window","localStorage","removeItem","userCredentials","newUser","setItem","JSON","stringify","useEffect","sort","blog1","blog2","existingUser","getItem","parse","updatedBlog","map","find","localeCompare","confirm","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad4c4c26.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst Blog = ({ blog, likeButtonHandler, removeButtonHandler }) => {\r\n  const [view, setView] = useState(false);\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingBottom:10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  const viewButtonStyle = {\r\n    marginLeft: 10\r\n  };\r\n\r\n  const viewButtonHandler = () => {\r\n    setView(!view);\r\n  };\r\n\r\n  const likeHandler = async () => {\r\n    const newBlog = {\r\n      user: blog.user.id,\r\n      likes: blog.likes + 1,\r\n      author: blog.author,\r\n      title: blog.title,\r\n      url: blog.url\r\n    };\r\n\r\n    await likeButtonHandler(newBlog, blog.id);\r\n  };\r\n\r\n  const detailsContent = () => {\r\n    if(!view) return null;\r\n    return (\r\n      <React.Fragment>\r\n        <p className='url'>{blog.url}</p>\r\n        <p className='likes'>likes {blog.likes}</p>\r\n        <button className='likeButton' onClick={likeHandler}>like</button>\r\n        <div>\r\n          <button onClick={removeButtonHandler}>remove</button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={blogStyle} className='blog'>\r\n      <div className='title'>\r\n        {blog.title} <button className='viewButton' style={viewButtonStyle} onClick={viewButtonHandler}>{ view ? 'hide' : 'view'}</button>\r\n      </div>\r\n      <div className='author'>\r\n        by {blog.author}\r\n      </div>\r\n      {\r\n        detailsContent()\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Blog;","import React from 'react';\r\n\r\n\r\nconst LoginForm = ({ username, password, onUsernameChange, onPasswordChange, loginFormSubmitHandler }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h2>login to application</h2>\r\n      <form id='login' onSubmit={loginFormSubmitHandler}>\r\n        <div>\r\n          username <input id='username' name='username' value={username} onChange={onUsernameChange}/>\r\n        </div>\r\n        <div>\r\n          password <input id='password' name='password' type='password' value={password} onChange={onPasswordChange}/>\r\n        </div>\r\n        <button id='submit' type='submit'>login</button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport './../styles/Notification.css';\r\n\r\n\r\nconst Notification = ( { positive, message } ) => {\r\n  return (\r\n    <div id='notification' className={ positive ? 'positive' : 'negative'}>\r\n      { message }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import React, { useState, useImperativeHandle  } from 'react';\r\n\r\nconst Togglable = React.forwardRef(\r\n  (props, ref) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const showWhenVisible = { display: visible ? '' : 'none' };\r\n    const hideWhenVisible = { display: visible ? 'none' : '' };\r\n\r\n    const toggleVisibility = () => {\r\n      setVisible(!visible);\r\n      props.resetFn();\r\n    };\r\n\r\n    useImperativeHandle(ref, () => {\r\n      return {\r\n        toggleVisibility\r\n      };\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={hideWhenVisible}>\r\n          <button onClick={toggleVisibility}>{props.showContentButtonLabel}</button>\r\n        </div>\r\n        <div style={showWhenVisible}>\r\n          {props.children}\r\n          <button onClick={toggleVisibility}>{props.hideContentButtonLabel}</button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n);\r\n\r\nTogglable.displayName = 'Togglable';\r\n\r\nexport default Togglable;","import React, { useState, useRef, useImperativeHandle } from 'react';\r\n\r\nimport Togglable from './Togglable';\r\n\r\n\r\nconst CreateNewBlogForm = React.forwardRef(\r\n  (props, ref) => {\r\n    const [title, setTitle] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [url, setUrl] = useState('');\r\n    const createNewFormRef = useRef();\r\n\r\n    const resetCreateNewForm = () => {\r\n      setTitle('');\r\n      setAuthor('');\r\n      setUrl('');\r\n    };\r\n\r\n    useImperativeHandle(ref, () => {\r\n      return {\r\n        resetCreateNewForm,\r\n        createNewFormRef\r\n      };\r\n    });\r\n\r\n    const inputChangeHandler = (setFn) => {\r\n      return (event) => {\r\n        setFn(event.target.value);\r\n      };\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Togglable\r\n          showContentButtonLabel='Create New Blog'\r\n          hideContentButtonLabel='Cancel'\r\n          resetFn={resetCreateNewForm}\r\n          ref={createNewFormRef}\r\n        >\r\n          <h2>create new</h2>\r\n          <form className='createNewForm' onSubmit={props.createNewBlogSubmitHandler}>\r\n            <label htmlFor='title'>title:</label>\r\n            <input type='text' id='title' name='title' value={title} onChange={inputChangeHandler(setTitle)}/>\r\n            <label htmlFor='author'>author:</label>\r\n            <input type='text' id='author' name='author' value={author} onChange={inputChangeHandler(setAuthor)}/>\r\n            <label htmlFor='url'>url:</label>\r\n            <input type='text' id='url' name='url' value={url} onChange={inputChangeHandler(setUrl)}/>\r\n            <button type='submit'>Create</button>\r\n          </form>\r\n        </Togglable>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n);\r\n\r\nCreateNewBlogForm.displayName = 'CreateNewBlogForm';\r\n\r\nexport default CreateNewBlogForm;\r\n","import React from 'react';\r\n\r\n\r\nconst LoggedInUser = ( { name, logoutButtonHandler }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h2>blogs</h2>\r\n      <p id='logged_in_user'> { name } logged in <button id='logout' onClick={logoutButtonHandler}>logout</button></p>\r\n      <br/>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoggedInUser;","import axios from 'axios';\r\n\r\nconst loginUrl = '/api/login';\r\n\r\nconst login = async (user) => {\r\n  const config = {\r\n    method: 'post',\r\n    url: loginUrl,\r\n    data: user\r\n  };\r\n\r\n  const res = await axios(config);\r\n  return res.data;\r\n};\r\n\r\nconst userServices = {\r\n  login\r\n};\r\n\r\nexport default userServices;","import axios from 'axios';\n\nconst baseUrl = '/api/blogs';\n\nconst getAll = async () => {\n  const config = {\n    method: 'get',\n    url: baseUrl\n  };\n\n  const res = await axios(config);\n  return res.data;\n};\n\nconst createNew = async (blog, token) => {\n  const config = {\n    method: 'post',\n    url: baseUrl,\n    headers: {\n      'Authorization': `bearer ${token}`\n    },\n    data: blog\n  };\n\n  const res = await axios(config);\n  return res.data;\n};\n\nconst updateABlogEntry = async (blog, token, blogId) => {\n  const config = {\n    method: 'put',\n    url: `${baseUrl}/${blogId}`,\n    headers: {\n      'Authorization': `bearer ${token}`\n    },\n    data: blog\n  };\n\n  const res = await axios(config);\n  return res.data;\n};\n\nconst removeBlog = async (blogId, token) => {\n  const config = {\n    method: 'delete',\n    url: `${baseUrl}/${blogId}`,\n    headers: {\n      'Authorization': `bearer ${token}`\n    }\n  };\n\n  await axios(config);\n};\n\n\nconst blogServices = {\n  getAll,\n  createNew,\n  updateABlogEntry,\n  removeBlog\n};\n\nexport default blogServices;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport Blog from './components/Blog';\r\nimport LoginForm from './components/LoginForm';\r\nimport Notification from './components/Notification';\r\nimport CreateNewBlogForm from './components/CreateNewBlogForm';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport userServices from './services/user';\r\nimport blogServices from './services/blogs';\r\n\r\nconst NOTIFICATION_TIMEOUT = 3000;\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  const appRef = useRef();\r\n\r\n  const createNewBlogSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    let newBlog = {\r\n      title: event.target.title.value,\r\n      author: event.target.author.value,\r\n      url: event.target.url.value\r\n    };\r\n\r\n    await addNewBlog(newBlog);\r\n    appRef.current.resetCreateNewForm();\r\n    appRef.current.createNewFormRef.current.toggleVisibility();\r\n  }\r\n\r\n  const addNewBlog = async (newBlog) => {\r\n    try {\r\n      const newAddedBlog = await blogServices.createNew(newBlog, user.token);\r\n      newAddedBlog.user = {\r\n        id: user.id,\r\n        name: user.name,\r\n        username: user.username\r\n      };\r\n      const newBlogs = [...blogs, newAddedBlog];\r\n      setBlogs(newBlogs);\r\n      setNewNotification({\r\n        positive: true,\r\n        message: `New blog ${newBlog.title} by ${newBlog.author} added.`,\r\n      });\r\n    } catch (err) {\r\n      setNewNotification({\r\n        positive: false,\r\n        message: 'Adding new blog failed.',\r\n      });\r\n    }\r\n  };\r\n\r\n  const setNewNotification = (newNotification) => {\r\n    setNotification(newNotification);\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n    }, NOTIFICATION_TIMEOUT);\r\n  };\r\n\r\n  const logoutButtonHandler = () => {\r\n    setUser(null);\r\n    window.localStorage.removeItem('user');\r\n  };\r\n\r\n  const loginFormSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const userCredentials = {\r\n      username: event.target.username.value,\r\n      password: event.target.password.value,\r\n    };\r\n\r\n    setUsername('');\r\n    setPassword('');\r\n\r\n    try {\r\n      const newUser = await userServices.login(userCredentials);\r\n      window.localStorage.setItem('user', JSON.stringify(newUser));\r\n      setUser(newUser);\r\n      setNewNotification({\r\n        positive: true,\r\n        message: `${newUser.username} logged in.`,\r\n      });\r\n    } catch (err) {\r\n      setNewNotification({ positive: false, message: 'Log in failed.' });\r\n    }\r\n  };\r\n\r\n  const onUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const onPasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (user) {\r\n        const blogs = await blogServices.getAll();\r\n        setBlogs(blogs.sort((blog1, blog2) => blog1.likes - blog2.likes));\r\n      } else return [];\r\n    })();\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const existingUser = window.localStorage.getItem('user');\r\n    if (existingUser) setUser(JSON.parse(existingUser));\r\n  }, []);\r\n\r\n  const likeButtonHandler = async (blog, blogId) => {\r\n    const updatedBlog = await blogServices.updateABlogEntry(blog, user.token, blogId);\r\n    const newBlogs = blogs.map(blog => { return { ...blog }});\r\n    const oldBlog = newBlogs.find(blog => blog.id.localeCompare(updatedBlog.id) === 0);\r\n    oldBlog.likes = updatedBlog.likes;\r\n    setBlogs(newBlogs);\r\n  };\r\n\r\n  const removeButtonHandler = (blogId) => {\r\n    return async () => {\r\n      try {\r\n        const yes = window.confirm('Are you sure?');\r\n        if(!yes) return;\r\n        await blogServices.removeBlog(blogId, user.token);\r\n        const newBlogs = blogs.filter(blog => blog.id.localeCompare(blogId) !== 0);\r\n        setBlogs(newBlogs);\r\n        setNewNotification({ positive: true, message: 'Blog deleted successfully!!' });\r\n      }\r\n      catch(err) {\r\n        setNewNotification({ positive: false, message: 'Blog deletion failed!!' });\r\n      }\r\n    };\r\n  };\r\n\r\n  const blogsContent = () => {\r\n    return (\r\n      <div id='blogs'>\r\n        {\r\n          blogs\r\n            .sort((blog1, blog2) => blog2.likes - blog1.likes)\r\n            .map((blog) => <Blog\r\n              key={blog.id}\r\n              blog={blog}\r\n              likeButtonHandler={likeButtonHandler}\r\n              removeButtonHandler={removeButtonHandler(blog.id)}\r\n            />)\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const notificationContent = () => {\r\n    if (notification)\r\n      return (\r\n        <Notification\r\n          positive={notification.positive}\r\n          message={notification.message}\r\n        />\r\n      );\r\n    return null;\r\n  };\r\n\r\n  const contentIfLoggedIn = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <LoggedInUser\r\n          name={user.name}\r\n          logoutButtonHandler={logoutButtonHandler}\r\n        />\r\n        <CreateNewBlogForm createNewBlogSubmitHandler={createNewBlogSubmitHandler} ref={appRef}/>\r\n        { blogsContent() }\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const loginForm = () => {\r\n    return (\r\n      <LoginForm\r\n        username={username}\r\n        password={password}\r\n        onUsernameChange={onUsernameChange}\r\n        onPasswordChange={onPasswordChange}\r\n        loginFormSubmitHandler={loginFormSubmitHandler}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {notificationContent()}\r\n      {user ? contentIfLoggedIn() : loginForm()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}